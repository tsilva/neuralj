<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project [<!ENTITY buildfile SYSTEM "file:./build-user.xml">]>
<!-- WARNING: Eclipse autogenerated file. 
              Any modifications will be overwritten.
              Please edit build-user.xml instead.
-->
<project basedir="." default="build" name="neuralj">
    &buildfile;
    <property name="neuralj.location" value="."/>
    <path id="project.classpath">
        <pathelement location="bin"/>
        <pathelement location="${neuralj.location}/lib/xstream-1.1.2.jar"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="init" name="build">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac destdir="bin">
            <src path="."/>
            <exclude name="lib/*"/>
            <classpath refid="project.classpath"/>
        </javac>
    </target>
    <target name="PatternTest">
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="plain"/>
            <test name="net.sf.neuralj.datasets.test.PatternTest"/>
            <classpath refid="project.classpath"/>
        </junit>
    </target>
    <target name="PatternSetTest">
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="plain"/>
            <test name="net.sf.neuralj.datasets.test.PatternSetTest"/>
            <classpath refid="project.classpath"/>
        </junit>
    </target>
    <target name="IntervalTest">
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="plain"/>
            <test name="net.sf.neuralj.test.IntervalTest"/>
            <classpath refid="project.classpath"/>
        </junit>
    </target>
    <target name="MathematicsTest">
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="plain"/>
            <test name="net.sf.neuralj.test.MathematicsTest"/>
            <classpath refid="project.classpath"/>
        </junit>
    </target>
    <target name="MatrixTest">
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="plain"/>
            <test name="net.sf.neuralj.test.MatrixTest"/>
            <classpath refid="project.classpath"/>
        </junit>
    </target>
    <target name="neuralj">
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="plain"/>
            <test name="neuralj.networks.feedforward.learning.test.CascadeCorrelationTest"/>
            <test name="neuralj.networks.feedforward.test.SynapseTest"/>
            <test name="neuralj.test.RouletteSliceTest"/>
            <test name="neuralj.networks.feedforward.test.FeedForwardNeuralNetworkTest"/>
            <test name="neuralj.networks.feedforward.learning.genetic.selection.test.SelectionRankTest"/>
            <test name="neuralj.networks.feedforward.learning.genetic.mutation.test.MutationOrderChangingTest"/>
            <test name="neuralj.test.NeuralJTest"/>
            <test name="neuralj.networks.feedforward.learning.genetic.mutation.test.MutationRandomTest"/>
            <test name="neuralj.test.MathematicsTest"/>
            <test name="neuralj.networks.feedforward.test.NeuronLayerTest"/>
            <test name="neuralj.networks.feedforward.learning.genetic.selection.test.SelectionRouletteWheelTest"/>
            <test name="neuralj.networks.feedforward.learning.genetic.selection.test.SelectionTournamentTest"/>
            <test name="neuralj.datasets.test.PatternSetTest"/>
            <test name="neuralj.networks.feedforward.learning.genetic.crossover.test.CrossoverDoublePointTest"/>
            <test name="neuralj.networks.feedforward.learning.test.GeneticAlgorithmTest"/>
            <test name="neuralj.datasets.test.PatternTest"/>
            <test name="neuralj.networks.feedforward.learning.genetic.crossover.test.CrossoverUniformTest"/>
            <test name="neuralj.networks.feedforward.test.SynapseLayerTest"/>
            <test name="neuralj.test.RouletteWheelTest"/>
            <test name="neuralj.test.SerializerTest"/>
            <test name="neuralj.test.IntervalScalerTest"/>
            <test name="neuralj.test.ObjectClonerTest"/>
            <test name="neuralj.networks.feedforward.test.NeuronTest"/>
            <test name="neuralj.networks.feedforward.learning.genetic.crossover.test.CrossoverSinglePointTest"/>
            <test name="neuralj.networks.feedforward.learning.genetic.mutation.test.MutationFixedValueTest"/>
            <test name="neuralj.test.IntervalTest"/>
            <test name="neuralj.test.MatrixTest"/>
            <classpath refid="project.classpath"/>
        </junit>
    </target>
    <target name="NeuralJTest">
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="plain"/>
            <test name="net.sf.neuralj.test.NeuralJTest"/>
            <classpath refid="project.classpath"/>
        </junit>
    </target>
    <target name="NeuralJTest (1)">
        <java classname="net.sf.neuralj.test.NeuralJTest" failonerror="true" fork="yes">
            <classpath refid="project.classpath"/>
        </java>
    </target>
    <target name="ObjectClonerTest">
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="plain"/>
            <test name="net.sf.neuralj.test.ObjectClonerTest"/>
            <classpath refid="project.classpath"/>
        </junit>
    </target>
    <target name="NeuralNetworkTest (1)">
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="plain"/>
            <test name="net.sf.neuralj.networks.feedforward.test.NeuralNetworkTest"/>
            <classpath refid="project.classpath"/>
        </junit>
    </target>
    <target name="Kohonen">
        <java classname="net.sf.neuralj.networks.som.kohonen.Kohonen" failonerror="true" fork="yes">
            <classpath refid="project.classpath"/>
        </java>
    </target>
    <target name="NeuralJTest (2)">
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="plain"/>
            <test name="neuralj.test.NeuralJTest"/>
            <classpath refid="project.classpath"/>
        </junit>
    </target>
</project>
